<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmptyDataText" xml:space="preserve">
    <value>原先这里是有个列表的，但后来发现列表里面东西没了，于是列表也没了。</value>
  </data>
  <data name="File_UploadPath" xml:space="preserve">
    <value>D:\UploadedFiles\</value>
  </data>
  <data name="FoundNothing" xml:space="preserve">
    <value>您在找啥？我怎么找不到？</value>
  </data>
  <data name="GridViewPageSize" xml:space="preserve">
    <value>100</value>
    <comment>普通列表的每页条目数量</comment>
  </data>
  <data name="MooTester_CompileMemory" xml:space="preserve">
    <value>104857600</value>
    <comment>100MB</comment>
  </data>
  <data name="MooTester_CompilerMLE" xml:space="preserve">
    <value>&lt;color:red|*内存太小，不够编译器折腾*&gt;</value>
  </data>
  <data name="MooTester_CompilerRE" xml:space="preserve">
    <value>&lt;color:red|*编译器生气了：*
{{"{0}"}}&gt;</value>
  </data>
  <data name="MooTester_CompilerSuccess" xml:space="preserve">
    <value>&lt;color:green|*编译成功*&gt;</value>
  </data>
  <data name="MooTester_CompilerTLE" xml:space="preserve">
    <value>&lt;color:red|*编译器太磨叽，等不及了*&gt;</value>
  </data>
  <data name="MooTester_CompilerUndefinedError" xml:space="preserve">
    <value>&lt;color:red|*等等，编译器闹肚子了。*&gt;</value>
  </data>
  <data name="MooTester_CompileTime" xml:space="preserve">
    <value>8000</value>
    <comment>8s</comment>
  </data>
  <data name="MooTester_NetworkError" xml:space="preserve">
    <value>&lt;color:red|*评测机貌似出去遛弯了……*&gt;</value>
  </data>
  <data name="MooTester_TestCaseX" xml:space="preserve">
    <value># &lt;color:blue|*[url:测试点#{0}|../TestCase/?id={0}]*&gt; </value>
  </data>
  <data name="MooTester_TesterIP" xml:space="preserve">
    <value>127.0.0.1</value>
  </data>
  <data name="MooTester_TesterPort" xml:space="preserve">
    <value>6000</value>
  </data>
  <data name="MooTester_TestMLE" xml:space="preserve">
    <value>&lt;color:purple|内存超出限制。&gt;</value>
  </data>
  <data name="MooTester_TestRE" xml:space="preserve">
    <value>&lt;color:orange|程序崩溃。&gt;</value>
  </data>
  <data name="MooTester_TestSuccess" xml:space="preserve">
    <value>&lt;color:green|正确。&gt;(得分*{0}*，用时*{1}ms*，内存*{2}byte(s)*)
{{"{3}"}}</value>
  </data>
  <data name="MooTester_TestTLE" xml:space="preserve">
    <value>&lt;color:pink|超出时间限制。&gt;</value>
  </data>
  <data name="MooTester_TestUndefinedError" xml:space="preserve">
    <value>&lt;color:gray|天气不好，程序不开心。&gt;</value>
  </data>
  <data name="MooTester_TestWA" xml:space="preserve">
    <value>&lt;color:red|答案错误。&gt;(得分*{0}*，用时*{1}ms*，内存*{2}byte(s)*)
{{"{3}"}}</value>
  </data>
  <data name="MooTester_TranditionalJudger" xml:space="preserve">
    <value>D:\Special_Judge.exe</value>
  </data>
  <data name="NoEnoughPermission" xml:space="preserve">
    <value>您可能不具备完成此操作所必须的权限。</value>
  </data>
  <data name="Record_RejudgeInterval" xml:space="preserve">
    <value>5000</value>
    <comment>5s</comment>
  </data>
  <data name="MooTester_TestCompareError" xml:space="preserve">
    <value>&lt;color:red|比较器抽风了~&gt;</value>
  </data>
  <data name="MooTester_UnsupportedLanguage" xml:space="preserve">
    <value>&lt;color:red|*不支持{0}语言*&gt;</value>
  </data>
  <data name="MooTester_UnsupportedLanguageOperation" xml:space="preserve">
    <value>&lt;color:red|*{0}语言不支持{1}操作*&gt;</value>
  </data>
</root>